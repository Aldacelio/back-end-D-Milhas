// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using back_end_D_Milhas.Models;

#nullable disable

namespace back_end_D_Milhas.Migrations
{
    [DbContext(typeof(ConnectionContext))]
    partial class ConnectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("back_end_D_Milhas.Models.Companhia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("companhias");
                });

            modelBuilder.Entity("back_end_D_Milhas.Models.Depoimento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("autor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("texto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("depoimentos");
                });

            modelBuilder.Entity("back_end_D_Milhas.Models.Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sigla")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("estados");
                });

            modelBuilder.Entity("back_end_D_Milhas.Models.Passagem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("companhiaId")
                        .HasColumnType("integer");

                    b.Property<int>("conexoes")
                        .HasColumnType("integer");

                    b.Property<int>("destinoId")
                        .HasColumnType("integer");

                    b.Property<int>("origemId")
                        .HasColumnType("integer");

                    b.Property<int>("precoIda")
                        .HasColumnType("integer");

                    b.Property<int>("precoVolta")
                        .HasColumnType("integer");

                    b.Property<int>("taxaEmbarque")
                        .HasColumnType("integer");

                    b.Property<int>("tempoVoo")
                        .HasColumnType("integer");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("companhiaId");

                    b.HasIndex("destinoId");

                    b.HasIndex("origemId");

                    b.ToTable("passagens");
                });

            modelBuilder.Entity("back_end_D_Milhas.Models.Promocao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("destino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("imagem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("preco")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("promocoes");
                });

            modelBuilder.Entity("back_end_D_Milhas.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("estadoId")
                        .HasColumnType("integer");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("nascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("estadoId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("back_end_D_Milhas.Models.Passagem", b =>
                {
                    b.HasOne("back_end_D_Milhas.Models.Companhia", "companhia")
                        .WithMany()
                        .HasForeignKey("companhiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end_D_Milhas.Models.Estado", "destino")
                        .WithMany()
                        .HasForeignKey("destinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end_D_Milhas.Models.Estado", "origem")
                        .WithMany()
                        .HasForeignKey("origemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("companhia");

                    b.Navigation("destino");

                    b.Navigation("origem");
                });

            modelBuilder.Entity("back_end_D_Milhas.Models.User", b =>
                {
                    b.HasOne("back_end_D_Milhas.Models.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("estado");
                });
#pragma warning restore 612, 618
        }
    }
}
